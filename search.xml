<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的第一个项目</title>
    <url>/2021/06/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="毕业设计"><a href="#毕业设计" class="headerlink" title="毕业设计"></a>毕业设计</h1><h2 id="二手车商app开发于设计"><a href="#二手车商app开发于设计" class="headerlink" title="二手车商app开发于设计"></a>二手车商app开发于设计</h2><h3 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h3><h4 id="使用的是vue-cli3，webpack打包，软件使用的是HbuilderX，导入了element-ui来调整表单和图标，最后使用HbuildX打包成app，虽然项目非常简陋，但是vue-router、vue组件、webpack打包等都上手了，也算是对前端vue开发的组件以及工程化有了一定的了解"><a href="#使用的是vue-cli3，webpack打包，软件使用的是HbuilderX，导入了element-ui来调整表单和图标，最后使用HbuildX打包成app，虽然项目非常简陋，但是vue-router、vue组件、webpack打包等都上手了，也算是对前端vue开发的组件以及工程化有了一定的了解" class="headerlink" title="使用的是vue-cli3，webpack打包，软件使用的是HbuilderX，导入了element-ui来调整表单和图标，最后使用HbuildX打包成app，虽然项目非常简陋，但是vue-router、vue组件、webpack打包等都上手了，也算是对前端vue开发的组件以及工程化有了一定的了解"></a>使用的是vue-cli3，webpack打包，软件使用的是HbuilderX，导入了element-ui来调整表单和图标，最后使用HbuildX打包成app，虽然项目非常简陋，但是vue-router、vue组件、webpack打包等都上手了，也算是对前端vue开发的组件以及工程化有了一定的了解</h4><img src="/2021/06/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/1.jpg" style="zoom:25%;">

<hr>
<h3 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h3><img src="/2021/06/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/2.jpg" style="zoom:25%;">

<hr>
<h3 id="登录页"><a href="#登录页" class="headerlink" title="登录页"></a>登录页</h3><img src="/2021/06/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/3.jpg" style="zoom:25%;">

<img src="/2021/06/21/%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/4.jpg" style="zoom:25%;">

<p><a href="https://github.com/ycwdsg/ycwdsg.github.io/blob/master/%E9%98%B3%E5%85%89%E4%BA%8C%E6%89%8B%E8%BD%A6.apk">文件下载</a></p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>毕业设计</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS基础</title>
    <url>/2021/06/23/CSS%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title=" css"></a><center> css</center></h1><h2 id="一、css（层叠样式表）"><a href="#一、css（层叠样式表）" class="headerlink" title="一、css（层叠样式表）"></a>一、css（层叠样式表）</h2><h3 id="1、语法：选择器起头-属性：value"><a href="#1、语法：选择器起头-属性：value" class="headerlink" title="1、语法：选择器起头{属性：value}"></a>1、语法：选择器起头{属性：value}</h3><h3 id="2、HTML中添加css："><a href="#2、HTML中添加css：" class="headerlink" title="2、HTML中添加css："></a>2、HTML中添加css：</h3><h4 id="外部样式表：将CSS编写在扩展名为-CSS的单独文件中，并从html-lt-link-gt-元素引用，在文档开头链接CSS-lt-link-ref-“stylesheet”-href-“。。。”-gt-，"><a href="#外部样式表：将CSS编写在扩展名为-CSS的单独文件中，并从html-lt-link-gt-元素引用，在文档开头链接CSS-lt-link-ref-“stylesheet”-href-“。。。”-gt-，" class="headerlink" title="外部样式表：将CSS编写在扩展名为.CSS的单独文件中，并从html&lt; link&gt;元素引用，在文档开头链接CSS&lt; link ref=“stylesheet” href=“。。。”&gt;，"></a>外部样式表：将CSS编写在扩展名为.CSS的单独文件中，并从html&lt; link&gt;元素引用，在文档开头链接CSS&lt; link ref=“stylesheet” href=“。。。”&gt;，</h4><h4 id="内部样式表：不使用外部CSS文件，而是将CSS放在HTML文件-lt-head-gt-标签的-lt-style-gt-标签中"><a href="#内部样式表：不使用外部CSS文件，而是将CSS放在HTML文件-lt-head-gt-标签的-lt-style-gt-标签中" class="headerlink" title="内部样式表：不使用外部CSS文件，而是将CSS放在HTML文件&lt; head&gt;标签的&lt; style&gt;标签中"></a>内部样式表：不使用外部CSS文件，而是将CSS放在HTML文件&lt; head&gt;标签的&lt; style&gt;标签中</h4><h4 id="内联样式：存在于HTML元素的style属性之中（不建议）"><a href="#内联样式：存在于HTML元素的style属性之中（不建议）" class="headerlink" title="内联样式：存在于HTML元素的style属性之中（不建议）"></a>内联样式：存在于HTML元素的style属性之中（不建议）</h4><h3 id="3、根据元素在文档中的位置确定样式"><a href="#3、根据元素在文档中的位置确定样式" class="headerlink" title="3、根据元素在文档中的位置确定样式"></a>3、根据元素在文档中的位置确定样式</h3><h4 id="仅选择嵌套在-lt-li-gt-元素中的-lt-em-gt-可以这样选择：-li-em-。。。"><a href="#仅选择嵌套在-lt-li-gt-元素中的-lt-em-gt-可以这样选择：-li-em-。。。" class="headerlink" title="仅选择嵌套在&lt; li&gt;元素中的&lt; em&gt;可以这样选择： li em{。。。}"></a>仅选择嵌套在&lt; li&gt;元素中的&lt; em&gt;可以这样选择： li em{。。。}</h4><h4 id="在HTML中设置直接出现在标题后且与标题同层级的段落样式，如：h1-p（相邻选择符）-。。。"><a href="#在HTML中设置直接出现在标题后且与标题同层级的段落样式，如：h1-p（相邻选择符）-。。。" class="headerlink" title="在HTML中设置直接出现在标题后且与标题同层级的段落样式，如：h1+p（相邻选择符）{。。。}"></a>在HTML中设置直接出现在标题后且与标题同层级的段落样式，如：h1+p（相邻选择符）{。。。}</h4><h3 id="4、选择器"><a href="#4、选择器" class="headerlink" title="4、选择器"></a>4、选择器</h3><h4 id="元素选择器：所有制定类型的html元素"><a href="#元素选择器：所有制定类型的html元素" class="headerlink" title="元素选择器：所有制定类型的html元素"></a>元素选择器：所有制定类型的html元素</h4><h4 id="id选择齐器：具有特定id的元素-选择"><a href="#id选择齐器：具有特定id的元素-选择" class="headerlink" title="id选择齐器：具有特定id的元素 #选择"></a>id选择齐器：具有特定id的元素 #选择</h4><h4 id="类选择器：具有特定类的元素-选择"><a href="#类选择器：具有特定类的元素-选择" class="headerlink" title="类选择器：具有特定类的元素 .选择"></a>类选择器：具有特定类的元素 .选择</h4><h4 id="属性选择器：拥有特定属性的元素-如img-src-选择-lt-img-src-“。。。”-gt-特殊地：img-class-“a”-会匹配一个a类，但是也可以匹配一列用空格分开并包含a类的值详见参考文档"><a href="#属性选择器：拥有特定属性的元素-如img-src-选择-lt-img-src-“。。。”-gt-特殊地：img-class-“a”-会匹配一个a类，但是也可以匹配一列用空格分开并包含a类的值详见参考文档" class="headerlink" title="属性选择器：拥有特定属性的元素 如img[src] 选择&lt; img src=“。。。”&gt;特殊地：img[class~=“a”]会匹配一个a类，但是也可以匹配一列用空格分开并包含a类的值详见参考文档"></a>属性选择器：拥有特定属性的元素 如img[src] 选择&lt; img src=“。。。”&gt;特殊地：img[class~=“a”]会匹配一个a类，但是也可以匹配一列用空格分开并包含a类的值详见参考文档</h4><h4 id="伪类选择器：特定状态下的某元素-如a：hover、a：lin、：first-child等，也包含了伪元素如：p：：first-line-选择p的第一行，添加内容"><a href="#伪类选择器：特定状态下的某元素-如a：hover、a：lin、：first-child等，也包含了伪元素如：p：：first-line-选择p的第一行，添加内容" class="headerlink" title="伪类选择器：特定状态下的某元素 如a：hover、a：lin、：first-child等，也包含了伪元素如：p：：first-line{选择p的第一行，添加内容}"></a>伪类选择器：特定状态下的某元素 如a：hover、a：lin、：first-child等，也包含了伪元素如：p：：first-line{选择p的第一行，添加内容}</h4><h4 id="关系选择器：在其他选择器之间和其他选择器与文档内容之间建立了一种有用的关系"><a href="#关系选择器：在其他选择器之间和其他选择器与文档内容之间建立了一种有用的关系" class="headerlink" title="关系选择器：在其他选择器之间和其他选择器与文档内容之间建立了一种有用的关系"></a>关系选择器：在其他选择器之间和其他选择器与文档内容之间建立了一种有用的关系</h4><h4 id="后代选择器：用单个空格一一组合两个选择器：第一个选择器为父或祖先第二个为子代"><a href="#后代选择器：用单个空格一一组合两个选择器：第一个选择器为父或祖先第二个为子代" class="headerlink" title="后代选择器：用单个空格一一组合两个选择器：第一个选择器为父或祖先第二个为子代"></a>后代选择器：用单个空格一一组合两个选择器：第一个选择器为父或祖先第二个为子代</h4><h4 id="子代关系选择器：article-gt-p-，只会在选择器选中直接子元素的时候匹配，更远不会。"><a href="#子代关系选择器：article-gt-p-，只会在选择器选中直接子元素的时候匹配，更远不会。" class="headerlink" title="子代关系选择器：article&gt;p{}，只会在选择器选中直接子元素的时候匹配，更远不会。"></a>子代关系选择器：article&gt;p{}，只会在选择器选中直接子元素的时候匹配，更远不会。</h4><h4 id="领接兄弟选择器：用-链接两个选择器，用来选中两个相邻同级元素的后一个"><a href="#领接兄弟选择器：用-链接两个选择器，用来选中两个相邻同级元素的后一个" class="headerlink" title="领接兄弟选择器：用+链接两个选择器，用来选中两个相邻同级元素的后一个"></a>领接兄弟选择器：用+链接两个选择器，用来选中两个相邻同级元素的后一个</h4><h4 id="通用兄弟选择器：用-连接，可以选中前一个元素的后方所有元素"><a href="#通用兄弟选择器：用-连接，可以选中前一个元素的后方所有元素" class="headerlink" title="通用兄弟选择器：用~连接，可以选中前一个元素的后方所有元素"></a>通用兄弟选择器：用~连接，可以选中前一个元素的后方所有元素</h4><h4 id="全局选择器：-，选中了文档中所有内容（或者父元素的所有内容，如article-：：first-child）"><a href="#全局选择器：-，选中了文档中所有内容（或者父元素的所有内容，如article-：：first-child）" class="headerlink" title="全局选择器：*{}，选中了文档中所有内容（或者父元素的所有内容，如article *：：first-child）"></a>全局选择器：*{}，选中了文档中所有内容（或者父元素的所有内容，如article *：：first-child）</h4><h4 id="级联规则和专用规则：相同选择器，稍后的覆盖之前的（级联）；不同选择器更具体的会覆盖相关样式（专用）"><a href="#级联规则和专用规则：相同选择器，稍后的覆盖之前的（级联）；不同选择器更具体的会覆盖相关样式（专用）" class="headerlink" title="级联规则和专用规则：相同选择器，稍后的覆盖之前的（级联）；不同选择器更具体的会覆盖相关样式（专用）"></a>级联规则和专用规则：相同选择器，稍后的覆盖之前的（级联）；不同选择器更具体的会覆盖相关样式（专用）</h4><h4 id="选择器列表：多个选择器使用相同样式，可以用逗号分开（需要换行或者加空格）"><a href="#选择器列表：多个选择器使用相同样式，可以用逗号分开（需要换行或者加空格）" class="headerlink" title="选择器列表：多个选择器使用相同样式，可以用逗号分开（需要换行或者加空格）"></a>选择器列表：多个选择器使用相同样式，可以用逗号分开（需要换行或者加空格）</h4><h3 id="5、属性"><a href="#5、属性" class="headerlink" title="5、属性"></a>5、属性</h3><h4 id="常见属性：font、background、padding、border、margin等"><a href="#常见属性：font、background、padding、border、margin等" class="headerlink" title="常见属性：font、background、padding、border、margin等"></a>常见属性：font、background、padding、border、margin等</h4><h4 id="如果属性未知或者某个值对给定的属性无效，则声明被视为无效"><a href="#如果属性未知或者某个值对给定的属性无效，则声明被视为无效" class="headerlink" title="如果属性未知或者某个值对给定的属性无效，则声明被视为无效"></a>如果属性未知或者某个值对给定的属性无效，则声明被视为无效</h4><h3 id="6、函数"><a href="#6、函数" class="headerlink" title="6、函数"></a>6、函数</h3><h4 id="calc允许简单的计算-："><a href="#calc允许简单的计算-：" class="headerlink" title="calc允许简单的计算)："></a>calc允许简单的计算)：</h4><h4 id="rotate（旋转）等"><a href="#rotate（旋转）等" class="headerlink" title="rotate（旋转）等"></a>rotate（旋转）等</h4><h3 id="7、-规则：为CSS提供一些关于如何表现的指导"><a href="#7、-规则：为CSS提供一些关于如何表现的指导" class="headerlink" title="7、@规则：为CSS提供一些关于如何表现的指导"></a>7、@规则：为CSS提供一些关于如何表现的指导</h3><h4 id="如-import：将额外的样式表导入CSS样式表"><a href="#如-import：将额外的样式表导入CSS样式表" class="headerlink" title="如@import：将额外的样式表导入CSS样式表"></a>如@import：将额外的样式表导入CSS样式表</h4><h4 id="media：允许使用媒体查询来应用css，仅当某些条件成立"><a href="#media：允许使用媒体查询来应用css，仅当某些条件成立" class="headerlink" title="@media：允许使用媒体查询来应用css，仅当某些条件成立"></a>@media：允许使用媒体查询来应用css，仅当某些条件成立</h4><h3 id="8、速记属性"><a href="#8、速记属性" class="headerlink" title="8、速记属性"></a>8、速记属性</h3><h4 id="属性允许一行设置多个值"><a href="#属性允许一行设置多个值" class="headerlink" title="属性允许一行设置多个值"></a>属性允许一行设置多个值</h4><h4 id="padding：padding-top-right-bottom-left"><a href="#padding：padding-top-right-bottom-left" class="headerlink" title="padding：padding-top right bottom left"></a>padding：padding-top right bottom left</h4><h4 id="background：background-color-image-position-repeat-attachment"><a href="#background：background-color-image-position-repeat-attachment" class="headerlink" title="background：background-color image position repeat attachment"></a>background：background-color image position repeat attachment</h4><h3 id="9、CSS如何工作"><a href="#9、CSS如何工作" class="headerlink" title="9、CSS如何工作"></a>9、CSS如何工作</h3><h4 id="1、载入HTML文件"><a href="#1、载入HTML文件" class="headerlink" title="1、载入HTML文件"></a>1、载入HTML文件</h4><h4 id="2、将HTML文件转化为一个DOM"><a href="#2、将HTML文件转化为一个DOM" class="headerlink" title="2、将HTML文件转化为一个DOM"></a>2、将HTML文件转化为一个DOM</h4><h4 id="3、浏览器拉取该HTML相关大部分资源"><a href="#3、浏览器拉取该HTML相关大部分资源" class="headerlink" title="3、浏览器拉取该HTML相关大部分资源"></a>3、浏览器拉取该HTML相关大部分资源</h4><h4 id="4、浏览器拉取到CSS后会进行解析，根据选择器的类型分到不同的桶中，将css选择器的不同规则应用到对应的DOM节点中，并添加依赖节点（渲染树）"><a href="#4、浏览器拉取到CSS后会进行解析，根据选择器的类型分到不同的桶中，将css选择器的不同规则应用到对应的DOM节点中，并添加依赖节点（渲染树）" class="headerlink" title="4、浏览器拉取到CSS后会进行解析，根据选择器的类型分到不同的桶中，将css选择器的不同规则应用到对应的DOM节点中，并添加依赖节点（渲染树）"></a>4、浏览器拉取到CSS后会进行解析，根据选择器的类型分到不同的桶中，将css选择器的不同规则应用到对应的DOM节点中，并添加依赖节点（渲染树）</h4><h4 id="5、渲染树会依照应该出现的结构进行布局"><a href="#5、渲染树会依照应该出现的结构进行布局" class="headerlink" title="5、渲染树会依照应该出现的结构进行布局"></a>5、渲染树会依照应该出现的结构进行布局</h4><h4 id="6、网页展示在屏幕上"><a href="#6、网页展示在屏幕上" class="headerlink" title="6、网页展示在屏幕上"></a>6、网页展示在屏幕上</h4><h3 id="10、关于DOM"><a href="#10、关于DOM" class="headerlink" title="10、关于DOM"></a>10、关于DOM</h3><h4 id="一个DOM有一个树形结构，标记语言中的每一个元素、属性以及文字都对应着结构树中的一个节点"><a href="#一个DOM有一个树形结构，标记语言中的每一个元素、属性以及文字都对应着结构树中的一个节点" class="headerlink" title="一个DOM有一个树形结构，标记语言中的每一个元素、属性以及文字都对应着结构树中的一个节点"></a>一个DOM有一个树形结构，标记语言中的每一个元素、属性以及文字都对应着结构树中的一个节点</h4><h3 id="11、CSS代码无法解析的情况"><a href="#11、CSS代码无法解析的情况" class="headerlink" title="11、CSS代码无法解析的情况"></a>11、CSS代码无法解析的情况</h3><h4 id="会直接忽略跳过该css样式，直接解析下一个CSS选择器"><a href="#会直接忽略跳过该css样式，直接解析下一个CSS选择器" class="headerlink" title="会直接忽略跳过该css样式，直接解析下一个CSS选择器"></a>会直接忽略跳过该css样式，直接解析下一个CSS选择器</h4><h2 id="二、CSS构建"><a href="#二、CSS构建" class="headerlink" title="二、CSS构建"></a>二、CSS构建</h2><h3 id="1、层叠与继承"><a href="#1、层叠与继承" class="headerlink" title="1、层叠与继承"></a>1、层叠与继承</h3><h4 id="层叠：两条同级规则应用到一个元素时，后面的就是实际的规则，不同级更具体的才是实际的规则"><a href="#层叠：两条同级规则应用到一个元素时，后面的就是实际的规则，不同级更具体的才是实际的规则" class="headerlink" title="层叠：两条同级规则应用到一个元素时，后面的就是实际的规则，不同级更具体的才是实际的规则"></a>层叠：两条同级规则应用到一个元素时，后面的就是实际的规则，不同级更具体的才是实际的规则</h4><h4 id="层叠样式的优先级计算：千位：声明在style属性中的样式"><a href="#层叠样式的优先级计算：千位：声明在style属性中的样式" class="headerlink" title="层叠样式的优先级计算：千位：声明在style属性中的样式"></a>层叠样式的优先级计算：千位：声明在style属性中的样式</h4><h4 id="百位：选择器中包含id选择器"><a href="#百位：选择器中包含id选择器" class="headerlink" title="百位：选择器中包含id选择器"></a>百位：选择器中包含id选择器</h4><h4 id="十位：包含类选择器"><a href="#十位：包含类选择器" class="headerlink" title="十位：包含类选择器"></a>十位：包含类选择器</h4><h4 id="个位：包含元素、伪元素选择器（注意不能进位）"><a href="#个位：包含元素、伪元素选择器（注意不能进位）" class="headerlink" title="个位：包含元素、伪元素选择器（注意不能进位）"></a>个位：包含元素、伪元素选择器（注意不能进位）</h4><h4 id="特殊CSS：！import：用于修改特定属性的值，能够覆盖普通规则的层叠（可以用另一个！import覆盖）"><a href="#特殊CSS：！import：用于修改特定属性的值，能够覆盖普通规则的层叠（可以用另一个！import覆盖）" class="headerlink" title="特殊CSS：！import：用于修改特定属性的值，能够覆盖普通规则的层叠（可以用另一个！import覆盖）"></a>特殊CSS：！import：用于修改特定属性的值，能够覆盖普通规则的层叠（可以用另一个！import覆盖）</h4><h4 id="继承：有些设置在父元素的CSS属性可以被子元素继承，如：设置一个元素的font和color，每个在元素内的元素也有相同的属性，但是也有不继承的，如width、margin、borders等"><a href="#继承：有些设置在父元素的CSS属性可以被子元素继承，如：设置一个元素的font和color，每个在元素内的元素也有相同的属性，但是也有不继承的，如width、margin、borders等" class="headerlink" title="继承：有些设置在父元素的CSS属性可以被子元素继承，如：设置一个元素的font和color，每个在元素内的元素也有相同的属性，但是也有不继承的，如width、margin、borders等"></a>继承：有些设置在父元素的CSS属性可以被子元素继承，如：设置一个元素的font和color，每个在元素内的元素也有相同的属性，但是也有不继承的，如width、margin、borders等</h4><h4 id="控制继承：inherit：开启继承"><a href="#控制继承：inherit：开启继承" class="headerlink" title="控制继承：inherit：开启继承"></a>控制继承：inherit：开启继承</h4><h4 id="initial：设置属性值和浏览器默认样式相同"><a href="#initial：设置属性值和浏览器默认样式相同" class="headerlink" title="initial：设置属性值和浏览器默认样式相同"></a>initial：设置属性值和浏览器默认样式相同</h4><h4 id="unset：将属性重置为自然值，如果属性是自然继承则与inherit一样，反之为第二个"><a href="#unset：将属性重置为自然值，如果属性是自然继承则与inherit一样，反之为第二个" class="headerlink" title="unset：将属性重置为自然值，如果属性是自然继承则与inherit一样，反之为第二个"></a>unset：将属性重置为自然值，如果属性是自然继承则与inherit一样，反之为第二个</h4><h3 id="2、盒子模型"><a href="#2、盒子模型" class="headerlink" title="2、盒子模型"></a>2、盒子模型</h3><h4 id="块级盒子：盒子会在内联方向闪扩展并占据父容器在该方向上的所有可用空间、每个盒子都会换行、width和height可以发挥作用、内外边距和边框会将其他元素从当前盒子周围推开"><a href="#块级盒子：盒子会在内联方向闪扩展并占据父容器在该方向上的所有可用空间、每个盒子都会换行、width和height可以发挥作用、内外边距和边框会将其他元素从当前盒子周围推开" class="headerlink" title="块级盒子：盒子会在内联方向闪扩展并占据父容器在该方向上的所有可用空间、每个盒子都会换行、width和height可以发挥作用、内外边距和边框会将其他元素从当前盒子周围推开"></a>块级盒子：盒子会在内联方向闪扩展并占据父容器在该方向上的所有可用空间、每个盒子都会换行、width和height可以发挥作用、内外边距和边框会将其他元素从当前盒子周围推开</h4><h4 id="内联盒子：盒子不会换行、width等不起作用，垂直方向的边距会起作用，但不会推开其他inline（内联盒子），水平方向会推开内联盒子。"><a href="#内联盒子：盒子不会换行、width等不起作用，垂直方向的边距会起作用，但不会推开其他inline（内联盒子），水平方向会推开内联盒子。" class="headerlink" title="内联盒子：盒子不会换行、width等不起作用，垂直方向的边距会起作用，但不会推开其他inline（内联盒子），水平方向会推开内联盒子。"></a>内联盒子：盒子不会换行、width等不起作用，垂直方向的边距会起作用，但不会推开其他inline（内联盒子），水平方向会推开内联盒子。</h4><h4 id="内联盒子不会改变其他内容与内联盒子之间的关系，使用display：inline-block不会跳转到新行，但是会推开其他元素"><a href="#内联盒子不会改变其他内容与内联盒子之间的关系，使用display：inline-block不会跳转到新行，但是会推开其他元素" class="headerlink" title="内联盒子不会改变其他内容与内联盒子之间的关系，使用display：inline-block不会跳转到新行，但是会推开其他元素"></a>内联盒子不会改变其他内容与内联盒子之间的关系，使用display：inline-block不会跳转到新行，但是会推开其他元素</h4><h4 id="内部与外部显示类型：外部显示类型决定盒子是块级还是内联（display），内部显示类型决定盒子内部元素如何布局"><a href="#内部与外部显示类型：外部显示类型决定盒子是块级还是内联（display），内部显示类型决定盒子内部元素如何布局" class="headerlink" title="内部与外部显示类型：外部显示类型决定盒子是块级还是内联（display），内部显示类型决定盒子内部元素如何布局"></a>内部与外部显示类型：外部显示类型决定盒子是块级还是内联（display），内部显示类型决定盒子内部元素如何布局</h4><h4 id="标准模型中，给盒子设置weight等属性改变的是content-box"><a href="#标准模型中，给盒子设置weight等属性改变的是content-box" class="headerlink" title="标准模型中，给盒子设置weight等属性改变的是content box"></a>标准模型中，给盒子设置weight等属性改变的是content box</h4><h4 id="替代盒模型：所有宽度都是可见宽度，内容宽度即为该宽度减去边框和填充，使用替代盒模型：box-sizing：border-box；"><a href="#替代盒模型：所有宽度都是可见宽度，内容宽度即为该宽度减去边框和填充，使用替代盒模型：box-sizing：border-box；" class="headerlink" title="替代盒模型：所有宽度都是可见宽度，内容宽度即为该宽度减去边框和填充，使用替代盒模型：box-sizing：border-box；"></a>替代盒模型：所有宽度都是可见宽度，内容宽度即为该宽度减去边框和填充，使用替代盒模型：box-sizing：border-box；</h4><h4 id="padding：内边距"><a href="#padding：内边距" class="headerlink" title="padding：内边距"></a>padding：内边距</h4><h4 id="border：边框，紧接着内边距的线"><a href="#border：边框，紧接着内边距的线" class="headerlink" title="border：边框，紧接着内边距的线"></a>border：边框，紧接着内边距的线</h4><h4 id="margin：外边距：围绕元素外部的空间"><a href="#margin：外边距：围绕元素外部的空间" class="headerlink" title="margin：外边距：围绕元素外部的空间"></a>margin：外边距：围绕元素外部的空间</h4><h4 id="外边距折叠：两个外边距相接的元素，这些边距将合为一个外边距"><a href="#外边距折叠：两个外边距相接的元素，这些边距将合为一个外边距" class="headerlink" title="外边距折叠：两个外边距相接的元素，这些边距将合为一个外边距"></a>外边距折叠：两个外边距相接的元素，这些边距将合为一个外边距</h4><h4 id="边框：标准盒模型中边框的大小将添加到框的宽度和高度"><a href="#边框：标准盒模型中边框的大小将添加到框的宽度和高度" class="headerlink" title="边框：标准盒模型中边框的大小将添加到框的宽度和高度"></a>边框：标准盒模型中边框的大小将添加到框的宽度和高度</h4><h4 id="内边距位于边框和内容区域之间，不能有负数，必须大于等于0"><a href="#内边距位于边框和内容区域之间，不能有负数，必须大于等于0" class="headerlink" title="内边距位于边框和内容区域之间，不能有负数，必须大于等于0"></a>内边距位于边框和内容区域之间，不能有负数，必须大于等于0</h4><h3 id="3、CSS的背景样式"><a href="#3、CSS的背景样式" class="headerlink" title="3、CSS的背景样式"></a>3、CSS的背景样式</h3><h4 id="背景颜色：background-color"><a href="#背景颜色：background-color" class="headerlink" title="背景颜色：background-color"></a>背景颜色：background-color</h4><h4 id="背景图片：background-image"><a href="#背景图片：background-image" class="headerlink" title="背景图片：background-image"></a>背景图片：background-image</h4><h4 id="默认情况下，大图不会缩小，小图会平铺填充"><a href="#默认情况下，大图不会缩小，小图会平铺填充" class="headerlink" title="默认情况下，大图不会缩小，小图会平铺填充"></a>默认情况下，大图不会缩小，小图会平铺填充</h4><h4 id="控制背景平铺：background-repeat：no-repeat（不重复）、repeat-x-y（重复一个方向）repeat（重复）"><a href="#控制背景平铺：background-repeat：no-repeat（不重复）、repeat-x-y（重复一个方向）repeat（重复）" class="headerlink" title="控制背景平铺：background-repeat：no-repeat（不重复）、repeat-x/y（重复一个方向）repeat（重复）"></a>控制背景平铺：background-repeat：no-repeat（不重复）、repeat-x/y（重复一个方向）repeat（重复）</h4><h4 id="调整背景图片大小：background-size设置长度或百分比，也可以用cover：使图像完全覆盖盒子（可能会超出），contain：使图像的大小适合盒子（会有间隙）"><a href="#调整背景图片大小：background-size设置长度或百分比，也可以用cover：使图像完全覆盖盒子（可能会超出），contain：使图像的大小适合盒子（会有间隙）" class="headerlink" title="调整背景图片大小：background-size设置长度或百分比，也可以用cover：使图像完全覆盖盒子（可能会超出），contain：使图像的大小适合盒子（会有间隙）"></a>调整背景图片大小：background-size设置长度或百分比，也可以用cover：使图像完全覆盖盒子（可能会超出），contain：使图像的大小适合盒子（会有间隙）</h4><h4 id="背景图像定位：background-position：top：值，right：值"><a href="#背景图像定位：background-position：top：值，right：值" class="headerlink" title="背景图像定位：background-position：top：值，right：值"></a>背景图像定位：background-position：top：值，right：值</h4><h4 id="渐变背景：background-image：渐变样式（角度或者形状，rgba（），rgba（），阴影百分比）"><a href="#渐变背景：background-image：渐变样式（角度或者形状，rgba（），rgba（），阴影百分比）" class="headerlink" title="渐变背景：background-image：渐变样式（角度或者形状，rgba（），rgba（），阴影百分比）"></a>渐变背景：background-image：渐变样式（角度或者形状，rgba（），rgba（），阴影百分比）</h4><h3 id="4、书写模式"><a href="#4、书写模式" class="headerlink" title="4、书写模式"></a>4、书写模式</h3><h4 id="文本的排列方式是横向还是纵向，writing-mode属性来切换。horizontal-tb：从上至下，横向；vertical-rl：纵向，块流向从右向左，vertical-lr：纵向，从左向右"><a href="#文本的排列方式是横向还是纵向，writing-mode属性来切换。horizontal-tb：从上至下，横向；vertical-rl：纵向，块流向从右向左，vertical-lr：纵向，从左向右" class="headerlink" title="文本的排列方式是横向还是纵向，writing-mode属性来切换。horizontal-tb：从上至下，横向；vertical-rl：纵向，块流向从右向左，vertical-lr：纵向，从左向右"></a>文本的排列方式是横向还是纵向，writing-mode属性来切换。horizontal-tb：从上至下，横向；vertical-rl：纵向，块流向从右向左，vertical-lr：纵向，从左向右</h4><h3 id="5、元素溢出"><a href="#5、元素溢出" class="headerlink" title="5、元素溢出"></a>5、元素溢出</h3><h4 id="overflow控制元素溢出，默认为visible，因此溢出也能看到；可以设置overflow：hidden，溢出的隐藏了或者可以设置overflow：scroll，将溢出的部分用滚动的方式浏览（可以设置单方向：overflow-x-y）"><a href="#overflow控制元素溢出，默认为visible，因此溢出也能看到；可以设置overflow：hidden，溢出的隐藏了或者可以设置overflow：scroll，将溢出的部分用滚动的方式浏览（可以设置单方向：overflow-x-y）" class="headerlink" title="overflow控制元素溢出，默认为visible，因此溢出也能看到；可以设置overflow：hidden，溢出的隐藏了或者可以设置overflow：scroll，将溢出的部分用滚动的方式浏览（可以设置单方向：overflow-x/y）"></a>overflow控制元素溢出，默认为visible，因此溢出也能看到；可以设置overflow：hidden，溢出的隐藏了或者可以设置overflow：scroll，将溢出的部分用滚动的方式浏览（可以设置单方向：overflow-x/y）</h4><h3 id="6、CSS单位"><a href="#6、CSS单位" class="headerlink" title="6、CSS单位"></a>6、CSS单位</h3><h4 id="px：像素1cm-96px-2-54"><a href="#px：像素1cm-96px-2-54" class="headerlink" title="px：像素1cm=96px/2.54"></a>px：像素1cm=96px/2.54</h4><h4 id="em：在font-size中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小"><a href="#em：在font-size中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小" class="headerlink" title="em：在font-size中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小"></a>em：在font-size中使用是相对于父元素的字体大小，在其他属性中使用是相对于自身的字体大小</h4><h4 id="rem：根元素的字体大小"><a href="#rem：根元素的字体大小" class="headerlink" title="rem：根元素的字体大小"></a>rem：根元素的字体大小</h4><h4 id="vw：视窗宽度的1"><a href="#vw：视窗宽度的1" class="headerlink" title="vw：视窗宽度的1%"></a>vw：视窗宽度的1%</h4><h4 id="vh：视窗高度的1"><a href="#vh：视窗高度的1" class="headerlink" title="vh：视窗高度的1%"></a>vh：视窗高度的1%</h4><h4 id="。。。"><a href="#。。。" class="headerlink" title="。。。"></a>。。。</h4><h3 id="7、图像、媒体"><a href="#7、图像、媒体" class="headerlink" title="7、图像、媒体"></a>7、图像、媒体</h3><h4 id="图像和视频被描述为替换元素：css不能影响这些元素的内部布局，只能影响他们在页面上于其他元素中的位置。"><a href="#图像和视频被描述为替换元素：css不能影响这些元素的内部布局，只能影响他们在页面上于其他元素中的位置。" class="headerlink" title="图像和视频被描述为替换元素：css不能影响这些元素的内部布局，只能影响他们在页面上于其他元素中的位置。"></a>图像和视频被描述为替换元素：css不能影响这些元素的内部布局，只能影响他们在页面上于其他元素中的位置。</h4><h4 id="溢出情况处理：overflow或者可以设置max-width：100-，允许图片或媒体尺寸上小于但不大于盒子"><a href="#溢出情况处理：overflow或者可以设置max-width：100-，允许图片或媒体尺寸上小于但不大于盒子" class="headerlink" title="溢出情况处理：overflow或者可以设置max-width：100%，允许图片或媒体尺寸上小于但不大于盒子"></a>溢出情况处理：overflow或者可以设置max-width：100%，允许图片或媒体尺寸上小于但不大于盒子</h4><h3 id="8、样式化表格"><a href="#8、样式化表格" class="headerlink" title="8、样式化表格"></a>8、样式化表格</h3><h4 id="table-layout：fixed创建更可控的表布局"><a href="#table-layout：fixed创建更可控的表布局" class="headerlink" title="table-layout：fixed创建更可控的表布局"></a>table-layout：fixed创建更可控的表布局</h4><h4 id="使用border-collapse：collapse是表元素边框合并"><a href="#使用border-collapse：collapse是表元素边框合并" class="headerlink" title="使用border-collapse：collapse是表元素边框合并"></a>使用border-collapse：collapse是表元素边框合并</h4><h4 id="。。。-1"><a href="#。。。-1" class="headerlink" title="。。。"></a>。。。</h4><h2 id="三、样式化文字"><a href="#三、样式化文字" class="headerlink" title="三、样式化文字"></a>三、样式化文字</h2><h3 id="1、字体"><a href="#1、字体" class="headerlink" title="1、字体"></a>1、字体</h3><h4 id="属性：color、font-family（字体种类）、font-size（字体大小）、font-style（字体样式）、font-weight（字体粗细）、text-transform（字体转换）：uppercase（将所有文本转为大写）lowercase（转换为小写）capitalize（转换首字母大写）；text-decoration（设置、取消字体上的文本装饰）、text-shadow（文本阴影）"><a href="#属性：color、font-family（字体种类）、font-size（字体大小）、font-style（字体样式）、font-weight（字体粗细）、text-transform（字体转换）：uppercase（将所有文本转为大写）lowercase（转换为小写）capitalize（转换首字母大写）；text-decoration（设置、取消字体上的文本装饰）、text-shadow（文本阴影）" class="headerlink" title="属性：color、font-family（字体种类）、font-size（字体大小）、font-style（字体样式）、font-weight（字体粗细）、text-transform（字体转换）：uppercase（将所有文本转为大写）lowercase（转换为小写）capitalize（转换首字母大写）；text-decoration（设置、取消字体上的文本装饰）、text-shadow（文本阴影）"></a>属性：color、font-family（字体种类）、font-size（字体大小）、font-style（字体样式）、font-weight（字体粗细）、text-transform（字体转换）：uppercase（将所有文本转为大写）lowercase（转换为小写）capitalize（转换首字母大写）；text-decoration（设置、取消字体上的文本装饰）、text-shadow（文本阴影）</h4><h3 id="2、文本"><a href="#2、文本" class="headerlink" title="2、文本"></a>2、文本</h3><h4 id="文本对齐：left：左对齐；justify：使文本展开，改变单词之间的差距；center：居中对齐"><a href="#文本对齐：left：左对齐；justify：使文本展开，改变单词之间的差距；center：居中对齐" class="headerlink" title="文本对齐：left：左对齐；justify：使文本展开，改变单词之间的差距；center：居中对齐"></a>文本对齐：left：左对齐；justify：使文本展开，改变单词之间的差距；center：居中对齐</h4><h4 id="行高：line-height"><a href="#行高：line-height" class="headerlink" title="行高：line-height"></a>行高：line-height</h4><h4 id="字母和单词间距：letter-spacing（字母间距）、word-spacing（单词间距）"><a href="#字母和单词间距：letter-spacing（字母间距）、word-spacing（单词间距）" class="headerlink" title="字母和单词间距：letter-spacing（字母间距）、word-spacing（单词间距）"></a>字母和单词间距：letter-spacing（字母间距）、word-spacing（单词间距）</h4><h2 id="四、css布局"><a href="#四、css布局" class="headerlink" title="四、css布局"></a>四、css布局</h2><h3 id="1、正常流布局"><a href="#1、正常流布局" class="headerlink" title="1、正常流布局"></a>1、正常流布局</h3><h4 id="不应用CSS规则来改变元素的展现方式，是浏览器默认的布局"><a href="#不应用CSS规则来改变元素的展现方式，是浏览器默认的布局" class="headerlink" title="不应用CSS规则来改变元素的展现方式，是浏览器默认的布局"></a>不应用CSS规则来改变元素的展现方式，是浏览器默认的布局</h4><h4 id="默认情况下，块级元素的内容宽度是其父元素的100-，高度与内容一致；内联元素的height-width与内容一致"><a href="#默认情况下，块级元素的内容宽度是其父元素的100-，高度与内容一致；内联元素的height-width与内容一致" class="headerlink" title="默认情况下，块级元素的内容宽度是其父元素的100%，高度与内容一致；内联元素的height width与内容一致"></a>默认情况下，块级元素的内容宽度是其父元素的100%，高度与内容一致；内联元素的height width与内容一致</h4><h4 id="元素之间，块级元素按照父元素的书写顺序的块流动方向放置（每个块级元素都会在上一个元素下另起一行，被设置好的margin分隔）；内联元素不会另起一行，只要有足够空间，会被安排在同一行"><a href="#元素之间，块级元素按照父元素的书写顺序的块流动方向放置（每个块级元素都会在上一个元素下另起一行，被设置好的margin分隔）；内联元素不会另起一行，只要有足够空间，会被安排在同一行" class="headerlink" title="元素之间，块级元素按照父元素的书写顺序的块流动方向放置（每个块级元素都会在上一个元素下另起一行，被设置好的margin分隔）；内联元素不会另起一行，只要有足够空间，会被安排在同一行"></a>元素之间，块级元素按照父元素的书写顺序的块流动方向放置（每个块级元素都会在上一个元素下另起一行，被设置好的margin分隔）；内联元素不会另起一行，只要有足够空间，会被安排在同一行</h4><h3 id="2、弹性盒子"><a href="#2、弹性盒子" class="headerlink" title="2、弹性盒子"></a>2、弹性盒子</h3><h4 id="按行或按列布局元素的一维布局方法：display：flex"><a href="#按行或按列布局元素的一维布局方法：display：flex" class="headerlink" title="按行或按列布局元素的一维布局方法：display：flex"></a>按行或按列布局元素的一维布局方法：display：flex</h4><h4 id="当元素为flex框时，按照两个轴布局："><a href="#当元素为flex框时，按照两个轴布局：" class="headerlink" title="当元素为flex框时，按照两个轴布局："></a>当元素为flex框时，按照两个轴布局：</h4><h4 id="主轴：沿着flex元素放置的方向延伸的轴（如行、列）开始和结束被称为main-start-和main-end"><a href="#主轴：沿着flex元素放置的方向延伸的轴（如行、列）开始和结束被称为main-start-和main-end" class="headerlink" title="主轴：沿着flex元素放置的方向延伸的轴（如行、列）开始和结束被称为main start 和main end"></a>主轴：沿着flex元素放置的方向延伸的轴（如行、列）开始和结束被称为main start 和main end</h4><h4 id="交叉轴：垂直于flex元素放置方向的轴，开始和结束被称为cross-start-和-cross-end"><a href="#交叉轴：垂直于flex元素放置方向的轴，开始和结束被称为cross-start-和-cross-end" class="headerlink" title="交叉轴：垂直于flex元素放置方向的轴，开始和结束被称为cross start 和 cross end"></a>交叉轴：垂直于flex元素放置方向的轴，开始和结束被称为cross start 和 cross end</h4><h4 id="设置了flex的父元素被称为flex容器，flex容器中表现为柔性的盒子的元素被称为flex项"><a href="#设置了flex的父元素被称为flex容器，flex容器中表现为柔性的盒子的元素被称为flex项" class="headerlink" title="设置了flex的父元素被称为flex容器，flex容器中表现为柔性的盒子的元素被称为flex项"></a>设置了flex的父元素被称为flex容器，flex容器中表现为柔性的盒子的元素被称为flex项</h4><h4 id="flex-direction属性：可以指定主轴的方向，默认row，改为列：将属性设置为column"><a href="#flex-direction属性：可以指定主轴的方向，默认row，改为列：将属性设置为column" class="headerlink" title="flex-direction属性：可以指定主轴的方向，默认row，改为列：将属性设置为column"></a>flex-direction属性：可以指定主轴的方向，默认row，改为列：将属性设置为column</h4><h4 id="flex-wrap属性：换行"><a href="#flex-wrap属性：换行" class="headerlink" title="flex-wrap属性：换行"></a>flex-wrap属性：换行</h4><h4 id="flex-flow属性：上两行属性的缩写；值为对应值"><a href="#flex-flow属性：上两行属性的缩写；值为对应值" class="headerlink" title="flex-flow属性：上两行属性的缩写；值为对应值"></a>flex-flow属性：上两行属性的缩写；值为对应值</h4><h4 id="flex动态尺寸：flex：数字，表示每个元素占用的空间（设置了padding和margin后的剩余空间）是多少"><a href="#flex动态尺寸：flex：数字，表示每个元素占用的空间（设置了padding和margin后的剩余空间）是多少" class="headerlink" title="flex动态尺寸：flex：数字，表示每个元素占用的空间（设置了padding和margin后的剩余空间）是多少"></a>flex动态尺寸：flex：数字，表示每个元素占用的空间（设置了padding和margin后的剩余空间）是多少</h4><h4 id="可以给flex设置最小值（在数字后，用空格隔开）"><a href="#可以给flex设置最小值（在数字后，用空格隔开）" class="headerlink" title="可以给flex设置最小值（在数字后，用空格隔开）"></a>可以给flex设置最小值（在数字后，用空格隔开）</h4><h4 id="水平和垂直对齐：align-items控制flex项在交叉轴上的位置"><a href="#水平和垂直对齐：align-items控制flex项在交叉轴上的位置" class="headerlink" title="水平和垂直对齐：align-items控制flex项在交叉轴上的位置"></a>水平和垂直对齐：align-items控制flex项在交叉轴上的位置</h4><h4 id="align-self：对齐当前的grid或flex行中的元素，并覆盖已有的flex-item"><a href="#align-self：对齐当前的grid或flex行中的元素，并覆盖已有的flex-item" class="headerlink" title="align-self：对齐当前的grid或flex行中的元素，并覆盖已有的flex-item"></a>align-self：对齐当前的grid或flex行中的元素，并覆盖已有的flex-item</h4><h4 id="justify-content：控制flex项在主轴上的位置（默认flex-start）"><a href="#justify-content：控制flex项在主轴上的位置（默认flex-start）" class="headerlink" title="justify-content：控制flex项在主轴上的位置（默认flex-start）"></a>justify-content：控制flex项在主轴上的位置（默认flex-start）</h4><h4 id="flex项排序：可以改变flex项的布局位置而不影响源顺序（dom树里元素的顺序）（默认值order：0）order值大的flex项比小的显示顺序更靠后，相同的order根据源顺序显示"><a href="#flex项排序：可以改变flex项的布局位置而不影响源顺序（dom树里元素的顺序）（默认值order：0）order值大的flex项比小的显示顺序更靠后，相同的order根据源顺序显示" class="headerlink" title="flex项排序：可以改变flex项的布局位置而不影响源顺序（dom树里元素的顺序）（默认值order：0）order值大的flex项比小的显示顺序更靠后，相同的order根据源顺序显示"></a>flex项排序：可以改变flex项的布局位置而不影响源顺序（dom树里元素的顺序）（默认值order：0）order值大的flex项比小的显示顺序更靠后，相同的order根据源顺序显示</h4><h4 id="flex嵌套：flex元素的孩子（子节点）也表现为flexible-box"><a href="#flex嵌套：flex元素的孩子（子节点）也表现为flexible-box" class="headerlink" title="flex嵌套：flex元素的孩子（子节点）也表现为flexible box"></a>flex嵌套：flex元素的孩子（子节点）也表现为flexible box</h4><h3 id="3、网格"><a href="#3、网格" class="headerlink" title="3、网格"></a>3、网格</h3><h4 id="用于web的二维布局系统"><a href="#用于web的二维布局系统" class="headerlink" title="用于web的二维布局系统"></a>用于web的二维布局系统</h4><h4 id="一个网格通常具有许多的列（column）与行（row）以及行与行、列与列之间的间隙，也被称为沟槽（gutter）"><a href="#一个网格通常具有许多的列（column）与行（row）以及行与行、列与列之间的间隙，也被称为沟槽（gutter）" class="headerlink" title="一个网格通常具有许多的列（column）与行（row）以及行与行、列与列之间的间隙，也被称为沟槽（gutter）"></a>一个网格通常具有许多的列（column）与行（row）以及行与行、列与列之间的间隙，也被称为沟槽（gutter）</h4><h4 id="定义一个网格：display：grid-将父容器改为网格后，直接子项也会变为网格"><a href="#定义一个网格：display：grid-将父容器改为网格后，直接子项也会变为网格" class="headerlink" title="定义一个网格：display：grid 将父容器改为网格后，直接子项也会变为网格"></a>定义一个网格：display：grid 将父容器改为网格后，直接子项也会变为网格</h4><h4 id="可以使用fr单位灵活定义网格：fr：表示了可用空间的比例（按比例划分可用空间，可与一般的长度单位混合）"><a href="#可以使用fr单位灵活定义网格：fr：表示了可用空间的比例（按比例划分可用空间，可与一般的长度单位混合）" class="headerlink" title="可以使用fr单位灵活定义网格：fr：表示了可用空间的比例（按比例划分可用空间，可与一般的长度单位混合）"></a>可以使用fr单位灵活定义网格：fr：表示了可用空间的比例（按比例划分可用空间，可与一般的长度单位混合）</h4><h4 id="网格间隙：使用grid-column-gap来定义列间隙，用grid-row-gap定义行间隙或者grid-gap同时-定义两个；间隙距离不能使用fr单位"><a href="#网格间隙：使用grid-column-gap来定义列间隙，用grid-row-gap定义行间隙或者grid-gap同时-定义两个；间隙距离不能使用fr单位" class="headerlink" title="网格间隙：使用grid-column-gap来定义列间隙，用grid-row-gap定义行间隙或者grid-gap同时 定义两个；间隙距离不能使用fr单位"></a>网格间隙：使用grid-column-gap来定义列间隙，用grid-row-gap定义行间隙或者grid-gap同时 定义两个；间隙距离不能使用fr单位</h4><h4 id="可以使用repeat重复构建具有某些宽度配置的某些列，如：grid-template-column：repeat（3，1fr）；可以得到三个1fr的列，第一个值表示重复多少次，第二个表示需要重复的构建配置"><a href="#可以使用repeat重复构建具有某些宽度配置的某些列，如：grid-template-column：repeat（3，1fr）；可以得到三个1fr的列，第一个值表示重复多少次，第二个表示需要重复的构建配置" class="headerlink" title="可以使用repeat重复构建具有某些宽度配置的某些列，如：grid-template-column：repeat（3，1fr）；可以得到三个1fr的列，第一个值表示重复多少次，第二个表示需要重复的构建配置"></a>可以使用repeat重复构建具有某些宽度配置的某些列，如：grid-template-column：repeat（3，1fr）；可以得到三个1fr的列，第一个值表示重复多少次，第二个表示需要重复的构建配置</h4><h4 id="显示网格和隐式网格"><a href="#显示网格和隐式网格" class="headerlink" title="显示网格和隐式网格"></a>显示网格和隐式网格</h4><h4 id="显示网格：通过grid-template-columns-rows构建"><a href="#显示网格：通过grid-template-columns-rows构建" class="headerlink" title="显示网格：通过grid-template-columns/rows构建"></a>显示网格：通过grid-template-columns/rows构建</h4><h4 id="隐式网格：当有内容被放到网格外时才生成，隐式网格中生成的行列大小是默认参数auto，根据放入的内容自动调整，可以通过grid-atuo-columns-row手动设置隐式网格的大小（隐式网格就是为了放显示网格放不下的元素，浏览器根据已经定义的显示网格自动生成的网格部分）"><a href="#隐式网格：当有内容被放到网格外时才生成，隐式网格中生成的行列大小是默认参数auto，根据放入的内容自动调整，可以通过grid-atuo-columns-row手动设置隐式网格的大小（隐式网格就是为了放显示网格放不下的元素，浏览器根据已经定义的显示网格自动生成的网格部分）" class="headerlink" title="隐式网格：当有内容被放到网格外时才生成，隐式网格中生成的行列大小是默认参数auto，根据放入的内容自动调整，可以通过grid-atuo-columns/row手动设置隐式网格的大小（隐式网格就是为了放显示网格放不下的元素，浏览器根据已经定义的显示网格自动生成的网格部分）"></a>隐式网格：当有内容被放到网格外时才生成，隐式网格中生成的行列大小是默认参数auto，根据放入的内容自动调整，可以通过grid-atuo-columns/row手动设置隐式网格的大小（隐式网格就是为了放显示网格放不下的元素，浏览器根据已经定义的显示网格自动生成的网格部分）</h4><h4 id="minmax函数：为行-列的尺寸设置了取值范围，如minmax（100px，auto）则尺寸最小为100像素，内容大于100则会自动调整。"><a href="#minmax函数：为行-列的尺寸设置了取值范围，如minmax（100px，auto）则尺寸最小为100像素，内容大于100则会自动调整。" class="headerlink" title="minmax函数：为行/列的尺寸设置了取值范围，如minmax（100px，auto）则尺寸最小为100像素，内容大于100则会自动调整。"></a>minmax函数：为行/列的尺寸设置了取值范围，如minmax（100px，auto）则尺寸最小为100像素，内容大于100则会自动调整。</h4><h4 id="自动使用多列填充：grid-template-columns：repeat（auto-fill，minmax（。。。））"><a href="#自动使用多列填充：grid-template-columns：repeat（auto-fill，minmax（。。。））" class="headerlink" title="自动使用多列填充：grid-template-columns：repeat（auto-fill，minmax（。。。））"></a>自动使用多列填充：grid-template-columns：repeat（auto-fill，minmax（。。。））</h4><h4 id="基于线的元素放置"><a href="#基于线的元素放置" class="headerlink" title="基于线的元素放置"></a>基于线的元素放置</h4><h4 id="定义完网格后根据分割线放入元素：可以通过grid-column-start-end来指定从那条线开始到哪条线结束"><a href="#定义完网格后根据分割线放入元素：可以通过grid-column-start-end来指定从那条线开始到哪条线结束" class="headerlink" title="定义完网格后根据分割线放入元素：可以通过grid-column-start/end来指定从那条线开始到哪条线结束"></a>定义完网格后根据分割线放入元素：可以通过grid-column-start/end来指定从那条线开始到哪条线结束</h4><h4 id="可简写grid-column-：开始-结束（显示网格可以使用-1表示最后一条分隔线，隐式网格不一定）"><a href="#可简写grid-column-：开始-结束（显示网格可以使用-1表示最后一条分隔线，隐式网格不一定）" class="headerlink" title="可简写grid-column ：开始/结束（显示网格可以使用-1表示最后一条分隔线，隐式网格不一定）"></a>可简写grid-column ：开始/结束（显示网格可以使用-1表示最后一条分隔线，隐式网格不一定）</h4><h4 id="使用grid-template-areas放置元素"><a href="#使用grid-template-areas放置元素" class="headerlink" title="使用grid-template-areas放置元素"></a>使用grid-template-areas放置元素</h4><h4 id="使用此属性需要命名一些元素并在属性中使用这些名字作为一个区域"><a href="#使用此属性需要命名一些元素并在属性中使用这些名字作为一个区域" class="headerlink" title="使用此属性需要命名一些元素并在属性中使用这些名字作为一个区域"></a>使用此属性需要命名一些元素并在属性中使用这些名字作为一个区域</h4><h4 id="规则：需要填满网格的每个格子；对于横跨多个格子的元素，重复写定义区域的名字；所有名字只能在一个连续的区域，不能出现在不同的位置；一个连续的区域必须是矩形，使用”-“符号，让一个各自留空"><a href="#规则：需要填满网格的每个格子；对于横跨多个格子的元素，重复写定义区域的名字；所有名字只能在一个连续的区域，不能出现在不同的位置；一个连续的区域必须是矩形，使用”-“符号，让一个各自留空" class="headerlink" title="规则：需要填满网格的每个格子；对于横跨多个格子的元素，重复写定义区域的名字；所有名字只能在一个连续的区域，不能出现在不同的位置；一个连续的区域必须是矩形，使用”.“符号，让一个各自留空"></a>规则：需要填满网格的每个格子；对于横跨多个格子的元素，重复写定义区域的名字；所有名字只能在一个连续的区域，不能出现在不同的位置；一个连续的区域必须是矩形，使用”.“符号，让一个各自留空</h4><h4 id="（如今可以靠div-class命名）"><a href="#（如今可以靠div-class命名）" class="headerlink" title="（如今可以靠div class命名）"></a>（如今可以靠div class命名）</h4><h3 id="4、浮动"><a href="#4、浮动" class="headerlink" title="4、浮动"></a>4、浮动</h3><h4 id="浮动元素会脱离正常的文档布局流，并吸附到其父容器的左边，在正常布局中位于这个浮动元素之下的内容，此时会围绕浮动元素，填满其右侧的空间，浮动内容仍遵循盒子模型"><a href="#浮动元素会脱离正常的文档布局流，并吸附到其父容器的左边，在正常布局中位于这个浮动元素之下的内容，此时会围绕浮动元素，填满其右侧的空间，浮动内容仍遵循盒子模型" class="headerlink" title="浮动元素会脱离正常的文档布局流，并吸附到其父容器的左边，在正常布局中位于这个浮动元素之下的内容，此时会围绕浮动元素，填满其右侧的空间，浮动内容仍遵循盒子模型"></a>浮动元素会脱离正常的文档布局流，并吸附到其父容器的左边，在正常布局中位于这个浮动元素之下的内容，此时会围绕浮动元素，填满其右侧的空间，浮动内容仍遵循盒子模型</h4><h4 id="多列浮动布局：以div为例：div：nth-of-type（1）-样式"><a href="#多列浮动布局：以div为例：div：nth-of-type（1）-样式" class="headerlink" title="多列浮动布局：以div为例：div：nth-of-type（1）{样式}"></a>多列浮动布局：以div为例：div：nth-of-type（1）{样式}</h4><h4 id="清除浮动：所有浮动下的自身不浮动内容将围绕浮动进行包装"><a href="#清除浮动：所有浮动下的自身不浮动内容将围绕浮动进行包装" class="headerlink" title="清除浮动：所有浮动下的自身不浮动内容将围绕浮动进行包装"></a>清除浮动：所有浮动下的自身不浮动内容将围绕浮动进行包装</h4><h4 id="可以使用clear属性清除浮动（可取值：left、right、both）：意味着此处停止浮动，这个元素和源码后的元素将不浮动"><a href="#可以使用clear属性清除浮动（可取值：left、right、both）：意味着此处停止浮动，这个元素和源码后的元素将不浮动" class="headerlink" title="可以使用clear属性清除浮动（可取值：left、right、both）：意味着此处停止浮动，这个元素和源码后的元素将不浮动"></a>可以使用clear属性清除浮动（可取值：left、right、both）：意味着此处停止浮动，这个元素和源码后的元素将不浮动</h4><h4 id="浮动问题：整个宽度可能难以计算：在给浮动框添加样式时，如背景、外边距等，布局可能损坏"><a href="#浮动问题：整个宽度可能难以计算：在给浮动框添加样式时，如背景、外边距等，布局可能损坏" class="headerlink" title="浮动问题：整个宽度可能难以计算：在给浮动框添加样式时，如背景、外边距等，布局可能损坏"></a>浮动问题：整个宽度可能难以计算：在给浮动框添加样式时，如背景、外边距等，布局可能损坏</h4><h4 id="解决办法：使用box-sizing更改盒模型来解决引入额外宽度的影响"><a href="#解决办法：使用box-sizing更改盒模型来解决引入额外宽度的影响" class="headerlink" title="解决办法：使用box-sizing更改盒模型来解决引入额外宽度的影响"></a>解决办法：使用box-sizing更改盒模型来解决引入额外宽度的影响</h4><h4 id="一些奇怪的特点：浮动的元素在父元素中所占的面积的有效高度为0；非浮动元素的外边距不能用于他们和浮动元素之间来创建空间（可以在之间单独创建一个空div来清除浮动）等"><a href="#一些奇怪的特点：浮动的元素在父元素中所占的面积的有效高度为0；非浮动元素的外边距不能用于他们和浮动元素之间来创建空间（可以在之间单独创建一个空div来清除浮动）等" class="headerlink" title="一些奇怪的特点：浮动的元素在父元素中所占的面积的有效高度为0；非浮动元素的外边距不能用于他们和浮动元素之间来创建空间（可以在之间单独创建一个空div来清除浮动）等"></a>一些奇怪的特点：浮动的元素在父元素中所占的面积的有效高度为0；非浮动元素的外边距不能用于他们和浮动元素之间来创建空间（可以在之间单独创建一个空div来清除浮动）等</h4><h3 id="5、定位"><a href="#5、定位" class="headerlink" title="5、定位"></a>5、定位</h3><h4 id="定位允许从正常的文档流布局中取出元素，并使他们具有不同的行为。"><a href="#定位允许从正常的文档流布局中取出元素，并使他们具有不同的行为。" class="headerlink" title="定位允许从正常的文档流布局中取出元素，并使他们具有不同的行为。"></a>定位允许从正常的文档流布局中取出元素，并使他们具有不同的行为。</h4><h4 id="静态定位：position：static（每个元素获取的默认值，只意味着将元素放入它在文档布局流中的正常位置）"><a href="#静态定位：position：static（每个元素获取的默认值，只意味着将元素放入它在文档布局流中的正常位置）" class="headerlink" title="静态定位：position：static（每个元素获取的默认值，只意味着将元素放入它在文档布局流中的正常位置）"></a>静态定位：position：static（每个元素获取的默认值，只意味着将元素放入它在文档布局流中的正常位置）</h4><h4 id="相对定位：position：relative，与静态定位非常相似，但是可以修改最终位置，可以使用left、right、top、bottom属性来精确指定要将定位元素移动的位置"><a href="#相对定位：position：relative，与静态定位非常相似，但是可以修改最终位置，可以使用left、right、top、bottom属性来精确指定要将定位元素移动的位置" class="headerlink" title="相对定位：position：relative，与静态定位非常相似，但是可以修改最终位置，可以使用left、right、top、bottom属性来精确指定要将定位元素移动的位置"></a>相对定位：position：relative，与静态定位非常相似，但是可以修改最终位置，可以使用left、right、top、bottom属性来精确指定要将定位元素移动的位置</h4><h4 id="绝对定位：position：absolute。绝对定位的元素不再存在于正常文档的布局流中。它在自己独立的层。同相对定位，可使用left等调整位置"><a href="#绝对定位：position：absolute。绝对定位的元素不再存在于正常文档的布局流中。它在自己独立的层。同相对定位，可使用left等调整位置" class="headerlink" title="绝对定位：position：absolute。绝对定位的元素不再存在于正常文档的布局流中。它在自己独立的层。同相对定位，可使用left等调整位置"></a>绝对定位：position：absolute。绝对定位的元素不再存在于正常文档的布局流中。它在自己独立的层。同相对定位，可使用left等调整位置</h4><h4 id="定位上下文：哪个元素是绝对定位元素的“包含元素”取决于绝对定位元素的父元素的position属性"><a href="#定位上下文：哪个元素是绝对定位元素的“包含元素”取决于绝对定位元素的父元素的position属性" class="headerlink" title="定位上下文：哪个元素是绝对定位元素的“包含元素”取决于绝对定位元素的父元素的position属性"></a>定位上下文：哪个元素是绝对定位元素的“包含元素”取决于绝对定位元素的父元素的position属性</h4><h4 id="如果父元素为static，则绝对定位元素会被包含在初始块容器中（绝对定位元素会被放在html元素的外面，并且根据浏览器视口来定位）"><a href="#如果父元素为static，则绝对定位元素会被包含在初始块容器中（绝对定位元素会被放在html元素的外面，并且根据浏览器视口来定位）" class="headerlink" title="如果父元素为static，则绝对定位元素会被包含在初始块容器中（绝对定位元素会被放在html元素的外面，并且根据浏览器视口来定位）"></a>如果父元素为static，则绝对定位元素会被包含在初始块容器中（绝对定位元素会被放在html元素的外面，并且根据浏览器视口来定位）</h4><h4 id="z-index：更改堆叠顺序。默认情况下，定位的元素都具有z-index为auto，实际上是0（注意没单位）"><a href="#z-index：更改堆叠顺序。默认情况下，定位的元素都具有z-index为auto，实际上是0（注意没单位）" class="headerlink" title="z-index：更改堆叠顺序。默认情况下，定位的元素都具有z-index为auto，实际上是0（注意没单位）"></a>z-index：更改堆叠顺序。默认情况下，定位的元素都具有z-index为auto，实际上是0（注意没单位）</h4><h4 id="固定定位：fixed。与绝对定位的工作方式完全相同，但是绝对定位固定元素是相对于html元素或最近的定位祖先，固定定位固定元素则是相对于浏览器视口本身"><a href="#固定定位：fixed。与绝对定位的工作方式完全相同，但是绝对定位固定元素是相对于html元素或最近的定位祖先，固定定位固定元素则是相对于浏览器视口本身" class="headerlink" title="固定定位：fixed。与绝对定位的工作方式完全相同，但是绝对定位固定元素是相对于html元素或最近的定位祖先，固定定位固定元素则是相对于浏览器视口本身"></a>固定定位：fixed。与绝对定位的工作方式完全相同，但是绝对定位固定元素是相对于html元素或最近的定位祖先，固定定位固定元素则是相对于浏览器视口本身</h4><h4 id="position：sticky允许被定位的元素表现得像相对定位一样，直到它滚动到某个阈值点位置，之后就是固定位置"><a href="#position：sticky允许被定位的元素表现得像相对定位一样，直到它滚动到某个阈值点位置，之后就是固定位置" class="headerlink" title="position：sticky允许被定位的元素表现得像相对定位一样，直到它滚动到某个阈值点位置，之后就是固定位置"></a>position：sticky允许被定位的元素表现得像相对定位一样，直到它滚动到某个阈值点位置，之后就是固定位置</h4><h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础</title>
    <url>/2021/06/23/HTML%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="一、html基础"><a href="#一、html基础" class="headerlink" title="一、html基础"></a>一、html基础</h2><h4 id="超文本标记语言，用来定义网页结构"><a href="#超文本标记语言，用来定义网页结构" class="headerlink" title="超文本标记语言，用来定义网页结构"></a>超文本标记语言，用来定义网页结构</h4><h4 id="元素：包含开始标签、结束标签、内容、元素（前三者结合为元素）"><a href="#元素：包含开始标签、结束标签、内容、元素（前三者结合为元素）" class="headerlink" title="元素：包含开始标签、结束标签、内容、元素（前三者结合为元素）"></a>元素：包含开始标签、结束标签、内容、元素（前三者结合为元素）</h4><h3 id="1、块级元素和内联元素"><a href="#1、块级元素和内联元素" class="headerlink" title="1、块级元素和内联元素"></a>1、块级元素和内联元素</h3><h4 id="块级元素在页面中以块的形式展现"><a href="#块级元素在页面中以块的形式展现" class="headerlink" title="块级元素在页面中以块的形式展现"></a>块级元素在页面中以块的形式展现</h4><h4 id="内联元素通常出现在块级元素中并环绕文档内容的一小部分"><a href="#内联元素通常出现在块级元素中并环绕文档内容的一小部分" class="headerlink" title="内联元素通常出现在块级元素中并环绕文档内容的一小部分"></a>内联元素通常出现在块级元素中并环绕文档内容的一小部分</h4><h3 id="2、元素的属性"><a href="#2、元素的属性" class="headerlink" title="2、元素的属性"></a>2、元素的属性</h3><h4 id="属性包含元素的额外信息，这些信息不会出现在实际的内容中"><a href="#属性包含元素的额外信息，这些信息不会出现在实际的内容中" class="headerlink" title="属性包含元素的额外信息，这些信息不会出现在实际的内容中"></a>属性包含元素的额外信息，这些信息不会出现在实际的内容中</h4><h4 id="属性值最好加引号，以减少不必要的错误"><a href="#属性值最好加引号，以减少不必要的错误" class="headerlink" title="属性值最好加引号，以减少不必要的错误"></a>属性值最好加引号，以减少不必要的错误</h4><h3 id="3、html文档"><a href="#3、html文档" class="headerlink" title="3、html文档"></a>3、html文档</h3><h4 id="lt-DOCTYPE-type-gt-声明文档类型"><a href="#lt-DOCTYPE-type-gt-声明文档类型" class="headerlink" title="&lt; !DOCTYPE type&gt;声明文档类型"></a>&lt; !DOCTYPE type&gt;声明文档类型</h4><h4 id="lt-html-gt-标签：根元素"><a href="#lt-html-gt-标签：根元素" class="headerlink" title="&lt; html&gt;标签：根元素"></a>&lt; html&gt;标签：根元素</h4><h4 id="lt-meta-charset-“uft-8”-gt-设置文档使用的字符集编码"><a href="#lt-meta-charset-“uft-8”-gt-设置文档使用的字符集编码" class="headerlink" title="&lt; meta charset=“uft-8”&gt;设置文档使用的字符集编码"></a>&lt; meta charset=“uft-8”&gt;设置文档使用的字符集编码</h4><h4 id="lt-title-gt-是一项元数据，用来标记页面内的标题"><a href="#lt-title-gt-是一项元数据，用来标记页面内的标题" class="headerlink" title="&lt;  title&gt;是一项元数据，用来标记页面内的标题"></a>&lt;  title&gt;是一项元数据，用来标记页面内的标题</h4><h4 id="lt-span-gt-没有语义"><a href="#lt-span-gt-没有语义" class="headerlink" title="&lt; span&gt;没有语义"></a>&lt; span&gt;没有语义</h4><h3 id="4、文字处理"><a href="#4、文字处理" class="headerlink" title="4、文字处理"></a>4、文字处理</h3><h4 id="无序列表：-lt-ul-gt-，里面包含-lt-li-gt-，用于标记列表项目顺序无关紧要的列表"><a href="#无序列表：-lt-ul-gt-，里面包含-lt-li-gt-，用于标记列表项目顺序无关紧要的列表" class="headerlink" title="无序列表：&lt; ul&gt;，里面包含&lt; li&gt;，用于标记列表项目顺序无关紧要的列表"></a>无序列表：&lt; ul&gt;，里面包含&lt; li&gt;，用于标记列表项目顺序无关紧要的列表</h4><h4 id="有序列表：-lt-OL-gt-，需要按照项目的顺序列出来"><a href="#有序列表：-lt-OL-gt-，需要按照项目的顺序列出来" class="headerlink" title="有序列表：&lt; OL&gt;，需要按照项目的顺序列出来"></a>有序列表：&lt; OL&gt;，需要按照项目的顺序列出来</h4><h4 id="嵌套列表：ol和ul联合li使用"><a href="#嵌套列表：ol和ul联合li使用" class="headerlink" title="嵌套列表：ol和ul联合li使用"></a>嵌套列表：ol和ul联合li使用</h4><h4 id="重点强调-：-lt-em-gt-标签（斜体强调）和-lt-strong-gt-标签（加粗强调）"><a href="#重点强调-：-lt-em-gt-标签（斜体强调）和-lt-strong-gt-标签（加粗强调）" class="headerlink" title="重点强调 ：&lt; em&gt;标签（斜体强调）和&lt; strong&gt;标签（加粗强调）"></a>重点强调 ：&lt; em&gt;标签（斜体强调）和&lt; strong&gt;标签（加粗强调）</h4><h4 id="lt-b-gt-粗体-lt-i-gt-斜体-lt-u-gt-下划线"><a href="#lt-b-gt-粗体-lt-i-gt-斜体-lt-u-gt-下划线" class="headerlink" title="&lt; b&gt;粗体 &lt; i&gt;斜体 &lt; u&gt;下划线"></a>&lt; b&gt;粗体 &lt; i&gt;斜体 &lt; u&gt;下划线</h4><h3 id="5、超链接"><a href="#5、超链接" class="headerlink" title="5、超链接"></a>5、超链接</h3><h4 id="将文本或其他内容转化为-lt-a-gt-中的链接，给它href属性"><a href="#将文本或其他内容转化为-lt-a-gt-中的链接，给它href属性" class="headerlink" title="将文本或其他内容转化为&lt; a&gt;中的链接，给它href属性"></a>将文本或其他内容转化为&lt; a&gt;中的链接，给它href属性</h4><h3 id="url：绝对url和相对url"><a href="#url：绝对url和相对url" class="headerlink" title="url：绝对url和相对url"></a>url：绝对url和相对url</h3><h4 id="绝对url：指向由其在web上的绝对位置定义的位置，不管url在哪里使用，总是指向确定的位置"><a href="#绝对url：指向由其在web上的绝对位置定义的位置，不管url在哪里使用，总是指向确定的位置" class="headerlink" title="绝对url：指向由其在web上的绝对位置定义的位置，不管url在哪里使用，总是指向确定的位置"></a>绝对url：指向由其在web上的绝对位置定义的位置，不管url在哪里使用，总是指向确定的位置</h4><h4 id="相对url：一个相对url所指向的位置取决于其所在文件的位置"><a href="#相对url：一个相对url所指向的位置取决于其所在文件的位置" class="headerlink" title="相对url：一个相对url所指向的位置取决于其所在文件的位置"></a>相对url：一个相对url所指向的位置取决于其所在文件的位置</h4><h4 id="尽可能选择相对rul（更易检查、效率更高）"><a href="#尽可能选择相对rul（更易检查、效率更高）" class="headerlink" title="尽可能选择相对rul（更易检查、效率更高）"></a>尽可能选择相对rul（更易检查、效率更高）</h4><h3 id="6、引用"><a href="#6、引用" class="headerlink" title="6、引用"></a>6、引用</h3><h4 id="块引用：块级元素从其他地方被引用，使用-lt-blockquote-gt-元素包裹起来，并在cite属性里用url来指向引用的资源"><a href="#块引用：块级元素从其他地方被引用，使用-lt-blockquote-gt-元素包裹起来，并在cite属性里用url来指向引用的资源" class="headerlink" title="块引用：块级元素从其他地方被引用，使用&lt; blockquote&gt;元素包裹起来，并在cite属性里用url来指向引用的资源"></a>块引用：块级元素从其他地方被引用，使用&lt; blockquote&gt;元素包裹起来，并在cite属性里用url来指向引用的资源</h4><h4 id="行内引用：与快引用类似，使用-lt-q-gt-元素包裹"><a href="#行内引用：与快引用类似，使用-lt-q-gt-元素包裹" class="headerlink" title="行内引用：与快引用类似，使用&lt; q&gt;元素包裹"></a>行内引用：与快引用类似，使用&lt; q&gt;元素包裹</h4><h3 id="7、文档与网站架构"><a href="#7、文档与网站架构" class="headerlink" title="7、文档与网站架构"></a>7、文档与网站架构</h3><h4 id="页眉：-lt-header-gt"><a href="#页眉：-lt-header-gt" class="headerlink" title="页眉：&lt; header&gt;"></a>页眉：&lt; header&gt;</h4><h4 id="导航栏：-lt-nav-gt"><a href="#导航栏：-lt-nav-gt" class="headerlink" title="导航栏：&lt; nav&gt;"></a>导航栏：&lt; nav&gt;</h4><h4 id="主内容：-lt-main-gt"><a href="#主内容：-lt-main-gt" class="headerlink" title="主内容：&lt; main&gt;"></a>主内容：&lt; main&gt;</h4><h4 id="子内容：-lt-section-gt-、-lt-article-gt-、-lt-div-gt-等"><a href="#子内容：-lt-section-gt-、-lt-article-gt-、-lt-div-gt-等" class="headerlink" title="子内容：&lt; section&gt;、&lt; article&gt;、&lt; div&gt;等"></a>子内容：&lt; section&gt;、&lt; article&gt;、&lt; div&gt;等</h4><h4 id="侧边栏：-lt-aside-gt"><a href="#侧边栏：-lt-aside-gt" class="headerlink" title="侧边栏：&lt; aside&gt;"></a>侧边栏：&lt; aside&gt;</h4><h4 id="页脚：-lt-footer-gt"><a href="#页脚：-lt-footer-gt" class="headerlink" title="页脚：&lt; footer&gt;"></a>页脚：&lt; footer&gt;</h4><h3 id="8、无语义元素"><a href="#8、无语义元素" class="headerlink" title="8、无语义元素"></a>8、无语义元素</h3><h4 id="lt-div-gt-块级无语义元素"><a href="#lt-div-gt-块级无语义元素" class="headerlink" title="&lt; div&gt;块级无语义元素"></a>&lt; div&gt;块级无语义元素</h4><h4 id="lt-span-gt-内联无语义元素"><a href="#lt-span-gt-内联无语义元素" class="headerlink" title="&lt; span&gt;内联无语义元素"></a>&lt; span&gt;内联无语义元素</h4><h3 id="9、换行与水平分割线"><a href="#9、换行与水平分割线" class="headerlink" title="9、换行与水平分割线"></a>9、换行与水平分割线</h3><h4 id="换行：-lt-br-gt"><a href="#换行：-lt-br-gt" class="headerlink" title="换行：&lt; br&gt;"></a>换行：&lt; br&gt;</h4><h4 id="水平分割线：-lt-hr-gt"><a href="#水平分割线：-lt-hr-gt" class="headerlink" title="水平分割线：&lt; hr&gt;"></a>水平分割线：&lt; hr&gt;</h4><h2 id="二、多媒体与嵌入"><a href="#二、多媒体与嵌入" class="headerlink" title="二、多媒体与嵌入"></a>二、多媒体与嵌入</h2><h3 id="1、图片"><a href="#1、图片" class="headerlink" title="1、图片"></a>1、图片</h3><h4 id="可以使用-lt-img-gt-来放入图片（-给图片的src取具体的名称更有利于seo的搜索）"><a href="#可以使用-lt-img-gt-来放入图片（-给图片的src取具体的名称更有利于seo的搜索）" class="headerlink" title="可以使用&lt; img&gt;来放入图片（*给图片的src取具体的名称更有利于seo的搜索）"></a>可以使用&lt; img&gt;来放入图片（*给图片的src取具体的名称更有利于seo的搜索）</h4><h4 id="alt属性：对图片的文字描述"><a href="#alt属性：对图片的文字描述" class="headerlink" title="alt属性：对图片的文字描述"></a>alt属性：对图片的文字描述</h4><h4 id="title属性：鼠标悬停提示"><a href="#title属性：鼠标悬停提示" class="headerlink" title="title属性：鼠标悬停提示"></a>title属性：鼠标悬停提示</h4><h4 id="lt-figure-gt-和-lt-figcaption-gt-元素：为图片提供一个语义容器，在标题和图片之间建立联系"><a href="#lt-figure-gt-和-lt-figcaption-gt-元素：为图片提供一个语义容器，在标题和图片之间建立联系" class="headerlink" title="&lt; figure&gt;和&lt; figcaption&gt;元素：为图片提供一个语义容器，在标题和图片之间建立联系"></a>&lt; figure&gt;和&lt; figcaption&gt;元素：为图片提供一个语义容器，在标题和图片之间建立联系</h4><h4 id="使用css来嵌入图片：-background-image：url（。。。）"><a href="#使用css来嵌入图片：-background-image：url（。。。）" class="headerlink" title="使用css来嵌入图片：{background-image：url（。。。）}"></a>使用css来嵌入图片：{background-image：url（。。。）}</h4><h3 id="2、视频和音频"><a href="#2、视频和音频" class="headerlink" title="2、视频和音频"></a>2、视频和音频</h3><h4 id="lt-video-gt-：嵌入视频"><a href="#lt-video-gt-：嵌入视频" class="headerlink" title="&lt; video&gt;：嵌入视频"></a>&lt; video&gt;：嵌入视频</h4><h4 id="src属性：同img"><a href="#src属性：同img" class="headerlink" title="src属性：同img"></a>src属性：同img</h4><h4 id="controls属性：规定浏览器是否为视频提供播放控件（布尔值）"><a href="#controls属性：规定浏览器是否为视频提供播放控件（布尔值）" class="headerlink" title="controls属性：规定浏览器是否为视频提供播放控件（布尔值）"></a>controls属性：规定浏览器是否为视频提供播放控件（布尔值）</h4><h4 id="不同浏览器支持的视频可能不同，可以用-lt-source-gt-标签，浏览器检查标签的type属性值来跳过不支持的格式"><a href="#不同浏览器支持的视频可能不同，可以用-lt-source-gt-标签，浏览器检查标签的type属性值来跳过不支持的格式" class="headerlink" title="不同浏览器支持的视频可能不同，可以用&lt; source&gt;标签，浏览器检查标签的type属性值来跳过不支持的格式"></a>不同浏览器支持的视频可能不同，可以用&lt; source&gt;标签，浏览器检查标签的type属性值来跳过不支持的格式</h4><h4 id="其他属性：weight、height、preload（可以用来缓冲较大的文件）、poster（指向一个图像url）等"><a href="#其他属性：weight、height、preload（可以用来缓冲较大的文件）、poster（指向一个图像url）等" class="headerlink" title="其他属性：weight、height、preload（可以用来缓冲较大的文件）、poster（指向一个图像url）等"></a>其他属性：weight、height、preload（可以用来缓冲较大的文件）、poster（指向一个图像url）等</h4><h4 id="lt-audio-gt-：几乎与video标签用法相同，但是没有视觉部件，因此无weight、height、poster等属性"><a href="#lt-audio-gt-：几乎与video标签用法相同，但是没有视觉部件，因此无weight、height、poster等属性" class="headerlink" title="&lt; audio&gt;：几乎与video标签用法相同，但是没有视觉部件，因此无weight、height、poster等属性"></a>&lt; audio&gt;：几乎与video标签用法相同，但是没有视觉部件，因此无weight、height、poster等属性</h4><h4 id="显示音频文本：WebVTT格式，使用-lt-track-gt-标签连接vtt文件，track、标签需要放在source标签之后，使用kind属性指明类型，使用srclang属性告诉浏览器说是什么语言写的（文本轨道会使网站更容易seo的搜索）"><a href="#显示音频文本：WebVTT格式，使用-lt-track-gt-标签连接vtt文件，track、标签需要放在source标签之后，使用kind属性指明类型，使用srclang属性告诉浏览器说是什么语言写的（文本轨道会使网站更容易seo的搜索）" class="headerlink" title="显示音频文本：WebVTT格式，使用&lt; track&gt;标签连接vtt文件，track、标签需要放在source标签之后，使用kind属性指明类型，使用srclang属性告诉浏览器说是什么语言写的（文本轨道会使网站更容易seo的搜索）"></a>显示音频文本：WebVTT格式，使用&lt; track&gt;标签连接vtt文件，track、标签需要放在source标签之后，使用kind属性指明类型，使用srclang属性告诉浏览器说是什么语言写的（文本轨道会使网站更容易seo的搜索）</h4><h3 id="3、其他嵌入"><a href="#3、其他嵌入" class="headerlink" title="3、其他嵌入"></a>3、其他嵌入</h3><h4 id="lt-iframe-gt-：可将整个web页嵌入到另一个网页"><a href="#lt-iframe-gt-：可将整个web页嵌入到另一个网页" class="headerlink" title="&lt; iframe&gt;：可将整个web页嵌入到另一个网页"></a>&lt; iframe&gt;：可将整个web页嵌入到另一个网页</h4><h4 id="基本属性：src、width、height、allowfullscreen、frameborder（默认1，两框架之间有边框，0则无边框）"><a href="#基本属性：src、width、height、allowfullscreen、frameborder（默认1，两框架之间有边框，0则无边框）" class="headerlink" title="基本属性：src、width、height、allowfullscreen、frameborder（默认1，两框架之间有边框，0则无边框）"></a>基本属性：src、width、height、allowfullscreen、frameborder（默认1，两框架之间有边框，0则无边框）</h4><h4 id="安全隐患：可能遭到单机劫持等黑客的攻击"><a href="#安全隐患：可能遭到单机劫持等黑客的攻击" class="headerlink" title="安全隐患：可能遭到单机劫持等黑客的攻击"></a>安全隐患：可能遭到单机劫持等黑客的攻击</h4><h4 id="可使用https减少远程内容的传输中被篡改的机会，防止嵌入式-内容访问父文档的内容"><a href="#可使用https减少远程内容的传输中被篡改的机会，防止嵌入式-内容访问父文档的内容" class="headerlink" title="可使用https减少远程内容的传输中被篡改的机会，防止嵌入式 内容访问父文档的内容"></a>可使用https减少远程内容的传输中被篡改的机会，防止嵌入式 内容访问父文档的内容</h4><h3 id="4、在网页中添加矢量图形"><a href="#4、在网页中添加矢量图形" class="headerlink" title="4、在网页中添加矢量图形"></a>4、在网页中添加矢量图形</h3><h4 id="位图：使用像素网格来定义、放大会像素化"><a href="#位图：使用像素网格来定义、放大会像素化" class="headerlink" title="位图：使用像素网格来定义、放大会像素化"></a>位图：使用像素网格来定义、放大会像素化</h4><h4 id="矢量图：使用算法来定义，放大不会像素化"><a href="#矢量图：使用算法来定义，放大不会像素化" class="headerlink" title="矢量图：使用算法来定义，放大不会像素化"></a>矢量图：使用算法来定义，放大不会像素化</h4><h4 id="svg：描述矢量图形的XML语言，SVG用于标记图形，可以使用-lt-circle-gt-lt-rect-gt-lt-feColorMatrix-gt-使用变换矩阵转换颜色-lt-animate-gt-（矢量图形的动画部分）-lt-mask-gt-等元素"><a href="#svg：描述矢量图形的XML语言，SVG用于标记图形，可以使用-lt-circle-gt-lt-rect-gt-lt-feColorMatrix-gt-使用变换矩阵转换颜色-lt-animate-gt-（矢量图形的动画部分）-lt-mask-gt-等元素" class="headerlink" title="svg：描述矢量图形的XML语言，SVG用于标记图形，可以使用&lt; circle&gt;&lt; rect&gt;&lt; feColorMatrix&gt;(使用变换矩阵转换颜色)&lt; animate&gt;（矢量图形的动画部分）&lt; mask&gt;等元素"></a>svg：描述矢量图形的XML语言，SVG用于标记图形，可以使用&lt; circle&gt;&lt; rect&gt;&lt; feColorMatrix&gt;(使用变换矩阵转换颜色)&lt; animate&gt;（矢量图形的动画部分）&lt; mask&gt;等元素</h4><h4 id="SVG优点：矢量图象的文本仍然可以访问（利于seo）、可以很好地适应脚本-样式"><a href="#SVG优点：矢量图象的文本仍然可以访问（利于seo）、可以很好地适应脚本-样式" class="headerlink" title="SVG优点：矢量图象的文本仍然可以访问（利于seo）、可以很好地适应脚本/样式"></a>SVG优点：矢量图象的文本仍然可以访问（利于seo）、可以很好地适应脚本/样式</h4><h4 id="缺点：容易变复杂、比栅格更难创建"><a href="#缺点：容易变复杂、比栅格更难创建" class="headerlink" title="缺点：容易变复杂、比栅格更难创建"></a>缺点：容易变复杂、比栅格更难创建</h4><h4 id="将svg添加到页面：img标签，在src中引用；使用svg作为css背景图片"><a href="#将svg添加到页面：img标签，在src中引用；使用svg作为css背景图片" class="headerlink" title="将svg添加到页面：img标签，在src中引用；使用svg作为css背景图片"></a>将svg添加到页面：img标签，在src中引用；使用svg作为css背景图片</h4><h4 id="内联SVG：文本编辑器中打开svg，复制代码，将其粘贴到HTML文档中"><a href="#内联SVG：文本编辑器中打开svg，复制代码，将其粘贴到HTML文档中" class="headerlink" title="内联SVG：文本编辑器中打开svg，复制代码，将其粘贴到HTML文档中"></a>内联SVG：文本编辑器中打开svg，复制代码，将其粘贴到HTML文档中</h4><h3 id="5、响应式图片"><a href="#5、响应式图片" class="headerlink" title="5、响应式图片"></a>5、响应式图片</h3><h4 id="创建自适应图片：img或者css背景图片"><a href="#创建自适应图片：img或者css背景图片" class="headerlink" title="创建自适应图片：img或者css背景图片"></a>创建自适应图片：img或者css背景图片</h4><h4 id="不同尺寸分辨率的切换：使用srcset和sizes属性"><a href="#不同尺寸分辨率的切换：使用srcset和sizes属性" class="headerlink" title="不同尺寸分辨率的切换：使用srcset和sizes属性"></a>不同尺寸分辨率的切换：使用srcset和sizes属性</h4><h4 id="srcset属性：定义了允许浏览器选择的图像集以及每个图像的大小（文件名-空格-图像的固有宽度如49w）"><a href="#srcset属性：定义了允许浏览器选择的图像集以及每个图像的大小（文件名-空格-图像的固有宽度如49w）" class="headerlink" title="srcset属性：定义了允许浏览器选择的图像集以及每个图像的大小（文件名+空格+图像的固有宽度如49w）"></a>srcset属性：定义了允许浏览器选择的图像集以及每个图像的大小（文件名+空格+图像的固有宽度如49w）</h4><h4 id="sizes属性：定义了一组媒体条件并指明当某些媒体条件为真时，什么样的图片尺寸时最佳选择（媒体条件-空格-条件为真时图像将填充的槽的宽度）"><a href="#sizes属性：定义了一组媒体条件并指明当某些媒体条件为真时，什么样的图片尺寸时最佳选择（媒体条件-空格-条件为真时图像将填充的槽的宽度）" class="headerlink" title="sizes属性：定义了一组媒体条件并指明当某些媒体条件为真时，什么样的图片尺寸时最佳选择（媒体条件+空格+条件为真时图像将填充的槽的宽度）"></a>sizes属性：定义了一组媒体条件并指明当某些媒体条件为真时，什么样的图片尺寸时最佳选择（媒体条件+空格+条件为真时图像将填充的槽的宽度）</h4><h4 id="同尺寸的不同分辨率切换：让srcset和x语法结合（css会应用到图片上）这时浏览器只是计算出正在显示的显示器的分辨率，然后提供srcset引用最合适的图像"><a href="#同尺寸的不同分辨率切换：让srcset和x语法结合（css会应用到图片上）这时浏览器只是计算出正在显示的显示器的分辨率，然后提供srcset引用最合适的图像" class="headerlink" title="同尺寸的不同分辨率切换：让srcset和x语法结合（css会应用到图片上）这时浏览器只是计算出正在显示的显示器的分辨率，然后提供srcset引用最合适的图像"></a>同尺寸的不同分辨率切换：让srcset和x语法结合（css会应用到图片上）这时浏览器只是计算出正在显示的显示器的分辨率，然后提供srcset引用最合适的图像</h4><h4 id="美术设计：通过-lt-picture-gt-元素，使用media属性，这个属性包含判断条件，满足了则显示srcset路径中相应的图片"><a href="#美术设计：通过-lt-picture-gt-元素，使用media属性，这个属性包含判断条件，满足了则显示srcset路径中相应的图片" class="headerlink" title="美术设计：通过&lt; picture&gt;元素，使用media属性，这个属性包含判断条件，满足了则显示srcset路径中相应的图片"></a>美术设计：通过&lt; picture&gt;元素，使用media属性，这个属性包含判断条件，满足了则显示srcset路径中相应的图片</h4><h2 id="三、HTML表格"><a href="#三、HTML表格" class="headerlink" title="三、HTML表格"></a>三、HTML表格</h2><h3 id="1、基本标签"><a href="#1、基本标签" class="headerlink" title="1、基本标签"></a>1、基本标签</h3><h4 id="lt-table-gt-每一个表格的内容都在此标签中"><a href="#lt-table-gt-每一个表格的内容都在此标签中" class="headerlink" title="&lt; table&gt;每一个表格的内容都在此标签中"></a>&lt; table&gt;每一个表格的内容都在此标签中</h4><h4 id="lt-td-gt-创建单元格"><a href="#lt-td-gt-创建单元格" class="headerlink" title="&lt; td&gt;创建单元格"></a>&lt; td&gt;创建单元格</h4><h4 id="lt-tr-gt-（table-row）会让单元格从第二行开始，一般包含td元素使用"><a href="#lt-tr-gt-（table-row）会让单元格从第二行开始，一般包含td元素使用" class="headerlink" title="&lt; tr&gt; （table row）会让单元格从第二行开始，一般包含td元素使用"></a>&lt; tr&gt; （table row）会让单元格从第二行开始，一般包含td元素使用</h4><h4 id="lt-th-gt-添加标题"><a href="#lt-th-gt-添加标题" class="headerlink" title="&lt; th&gt; 添加标题"></a>&lt; th&gt; 添加标题</h4><h3 id="2、允许单元格跨行和列"><a href="#2、允许单元格跨行和列" class="headerlink" title="2、允许单元格跨行和列"></a>2、允许单元格跨行和列</h3><h4 id="colspan属性：接收一个没有单位的数字，如果colspan-“2”，表示单元格的宽度是两个单元格"><a href="#colspan属性：接收一个没有单位的数字，如果colspan-“2”，表示单元格的宽度是两个单元格" class="headerlink" title="colspan属性：接收一个没有单位的数字，如果colspan=“2”，表示单元格的宽度是两个单元格"></a>colspan属性：接收一个没有单位的数字，如果colspan=“2”，表示单元格的宽度是两个单元格</h4><h4 id="rowspan属性：跨行"><a href="#rowspan属性：跨行" class="headerlink" title="rowspan属性：跨行"></a>rowspan属性：跨行</h4><h3 id="3、为表格中的列提供共同的样式"><a href="#3、为表格中的列提供共同的样式" class="headerlink" title="3、为表格中的列提供共同的样式"></a>3、为表格中的列提供共同的样式</h3><h4 id="在table标签下方定义-lt-clogroup-gt-lt-clo-gt-lt-clo-gt-lt-clogroup-gt-，其中clo来定义列的样式（第几列对应第几个clo元素）"><a href="#在table标签下方定义-lt-clogroup-gt-lt-clo-gt-lt-clo-gt-lt-clogroup-gt-，其中clo来定义列的样式（第几列对应第几个clo元素）" class="headerlink" title="在table标签下方定义&lt; clogroup&gt;&lt; clo&gt;&lt; clo&gt;&lt; /clogroup&gt;，其中clo来定义列的样式（第几列对应第几个clo元素）"></a>在table标签下方定义&lt; clogroup&gt;&lt; clo&gt;&lt; clo&gt;&lt; /clogroup&gt;，其中clo来定义列的样式（第几列对应第几个clo元素）</h4><h3 id="4、高级特性"><a href="#4、高级特性" class="headerlink" title="4、高级特性"></a>4、高级特性</h3><h4 id="lt-caption-gt-：为表格添加标题，放在table下"><a href="#lt-caption-gt-：为表格添加标题，放在table下" class="headerlink" title="&lt; caption&gt;：为表格添加标题，放在table下"></a>&lt; caption&gt;：为表格添加标题，放在table下</h4><h4 id="lt-thead-gt-：把表中部分标记为表头，嵌套在table元素中，放置在头部位置，需要放在clo元素下"><a href="#lt-thead-gt-：把表中部分标记为表头，嵌套在table元素中，放置在头部位置，需要放在clo元素下" class="headerlink" title="&lt; thead&gt;：把表中部分标记为表头，嵌套在table元素中，放置在头部位置，需要放在clo元素下"></a>&lt; thead&gt;：把表中部分标记为表头，嵌套在table元素中，放置在头部位置，需要放在clo元素下</h4><h4 id="lt-tfoot-gt-：标记为页脚，放置在底部的位置，一般最后一行"><a href="#lt-tfoot-gt-：标记为页脚，放置在底部的位置，一般最后一行" class="headerlink" title="&lt; tfoot&gt;：标记为页脚，放置在底部的位置，一般最后一行"></a>&lt; tfoot&gt;：标记为页脚，放置在底部的位置，一般最后一行</h4><h4 id="lt-tbody-gt-标记为正文，放置在上两元素之间"><a href="#lt-tbody-gt-标记为正文，放置在上两元素之间" class="headerlink" title="&lt; tbody&gt;标记为正文，放置在上两元素之间"></a>&lt; tbody&gt;标记为正文，放置在上两元素之间</h4><h3 id="5、嵌套表格"><a href="#5、嵌套表格" class="headerlink" title="5、嵌套表格"></a>5、嵌套表格</h3><h4 id="在table标签中嵌套完整的table标签"><a href="#在table标签中嵌套完整的table标签" class="headerlink" title="在table标签中嵌套完整的table标签"></a>在table标签中嵌套完整的table标签</h4><h3 id="6、相关属性"><a href="#6、相关属性" class="headerlink" title="6、相关属性"></a>6、相关属性</h3><h4 id="scope属性：可以添加在th元素中，用来帮助理解标题单元格是行标题还是列标题，可选值colgroup、rowgroup"><a href="#scope属性：可以添加在th元素中，用来帮助理解标题单元格是行标题还是列标题，可选值colgroup、rowgroup" class="headerlink" title="scope属性：可以添加在th元素中，用来帮助理解标题单元格是行标题还是列标题，可选值colgroup、rowgroup"></a>scope属性：可以添加在th元素中，用来帮助理解标题单元格是行标题还是列标题，可选值colgroup、rowgroup</h4><h4 id="id和标题属性：用id和headers属性创造标题和单元格之间的联系。可以为td元素添加headers属性，为th元素添加id属性"><a href="#id和标题属性：用id和headers属性创造标题和单元格之间的联系。可以为td元素添加headers属性，为th元素添加id属性" class="headerlink" title="id和标题属性：用id和headers属性创造标题和单元格之间的联系。可以为td元素添加headers属性，为th元素添加id属性"></a>id和标题属性：用id和headers属性创造标题和单元格之间的联系。可以为td元素添加headers属性，为th元素添加id属性</h4>]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>前言</title>
    <url>/2021/06/21/hello-world/</url>
    <content><![CDATA[<h3 id="机械生，因为毕业设计是做前端相关因此开始了学习前端之路"><a href="#机械生，因为毕业设计是做前端相关因此开始了学习前端之路" class="headerlink" title="机械生，因为毕业设计是做前端相关因此开始了学习前端之路"></a>机械生，因为毕业设计是做前端相关因此开始了学习前端之路</h3>]]></content>
      <categories>
        <category>before</category>
      </categories>
  </entry>
</search>
